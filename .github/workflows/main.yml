---
name: Build and Push NGINX Proxy Server to AWS ECR

on: 
  push:
    branches: [ main ]

jobs:
  push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY_ID}}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          echo "Getting version tags "
          bash ./build/git_update.sh -v patch 

      - name: Building Image
        id: build-imagev1
        run: |
          echo "Building docker image"
          mkdir data/
          docker build --compress -t tf-nginx . 
          docker save --output data/image.tar tf-nginx

      - name: Archive code coverage results
        id: image-artifact
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: 
            data/
      
      - name: Tag, and Push the Image to Amazon ECR
        if: contains( github.ref, 'main')
        id: tag-and-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: tf-nginx
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          # IMAGE_TAG: latest          
        run: |
          echo "Building docker image"
          mkdir data/
          docker build --compress -t tf-nginx . 
          docker save --output data/image.tar tf-nginx

          echo "Pushing development version"
          docker load --input data/image.tar
          docker tag tf-nginx:latest $ECR_REGISTRY/$ECR_REPOSITORY:dev
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:dev

          echo "Pushing release version"
          export $TAGGED_ECR_REPO=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          docker tag tf-nginx:latest $TAGGED_ECR_REPO
          docker push $ECR_REGISTRY/$TAGGED_ECR_REPO

          echo "Pushing latest version"
          docker tag $TAGGED_ECR_REPO $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

